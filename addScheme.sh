#!/bin/bash

help() {
  echo "addScheme.sh [OPTIONS]"
  echo "             -l directory having a dockerfile of the countermeasure."
  echo "             -n name of Docker image created by the user."
  echo "             -o [option] when the countermeasure requires a flag to input the target code."
  echo "             -M unique word in the result strings generated by the"
  echo "                countermeasure against detected vulnerabilities."
  echo "                vaules of M : a (AC), d (DoS), f (FR), i (IO),"
  echo "                              r (RE), t (TD), u (UC)"
  exit 0
}

ac="None detected"
dos="None detected"
fr="None detected"
io="None detected"
re="None detected"
td="None detected"
uc="None detected"

while getopts "l:n:o:a:d:f:i:r:t:u:h" opt
do
  case $opt in
    l) dir=$OPTARG;;
    n) iname=$OPTARG;;
    o) flag=$OPTARG;;
    a) ac=$OPTARG;;
    d) dos=$OPTARG;;
    f) fr=$OPTARG;;
    i) io=$OPTARG;;
    r) re=$OPTARG;;
    t) td=$OPTARG;;
    u) uc=$OPTARG;;
    h) help ;;
    ?) help ;;
  esac
done

vuls=( "ac" "dos" "fr" "io" "re" "td" "uc" )

vulContents=( "$ac" "$dos" "$fr" "$io" "$re" "$td" "$uc" )

if [ ! $iname ]; then
  help
fi

if [ $dir ]; then
  sed -i "2s=# This=# This\ndocker build -t $iname $dir=" createContainers.sh
  ./createContainers.sh
fi

if [ $flag ]; then
  if [[ ! $flag =~ "-" ]]; then
    flag="-"$flag
  fi
fi

if [[ $ac == "None detected" ]] && [[ $dos == "None detected" ]] && [[ $fr == "None detected" ]] && [[ $io == "None detected" ]] && [[ $re == "None detected" ]] && [[ $td == "None detected" ]] && [[ $uc == "None detected" ]]; then
  help
fi

appendCountermeasure() {
  result=$(grep -n "$1=( " execution.sh)
  result=${result%%:*}
  if [[ ! $2 = "None detected" ]];then
    sed -i "${result}s=)=\"$iname\" )=" execution.sh
  fi
}

countermeasures=$(grep "security_tools=(" execution.sh)
sed -i "2s/)/\"$iname\" )/" execution.sh
for (( i=0; i<${#vuls[@]}; i++ ))
do
  appendCountermeasure ${vuls[$i]} "${vulContents[$i]}"
done
sed -i "s_# This_# This\nelif [[ \$tool = \"$iname\" ]]; then\n  timelimit -s 9 -t \$timeout docker run -it --rm -v \$(pwd)/.solc/solc:/usr/bin/solc -v \$(pwd)/\$file:/root/\$filename \$tool $flag \$filename \$options_" testing.sh

sed -i "2s/)/\"$iname\" )/" comparison.sh
sed -i "s_# This1_# This1\n$iname=(\"$ac\" \"$dos\" \"$fr\" \"$io\" \"$re\" \"td\" \"$uc\")_" comparison.sh
sed -i "s_# This2_# This2\n    elif [[ \${file[i]} = \"$iname\" ]]; then\n      checkVul \"\$dir/\${files[i]}\" \"\${$iname[j]}\" \${vul[\$j]}_" comparison.sh
sed -i "2s/)/\"$iname\" )/" result.sh

